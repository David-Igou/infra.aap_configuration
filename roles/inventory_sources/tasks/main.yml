---
- name: Add an inventory source
  awx.awx.tower_inventory_source:
    name:                                 "{{ tower_inventory_sources[0].name }}"  # REQUIRED
    new_name:                             "{{ tower_inventory_sources[0].new_name | default(omit) }}"
    description:                          "{{ tower_inventory_sources[0].description | default(omit) }}"
    inventory:                            "{{ tower_inventory_sources[0].inventory.inventory.name | default( tower_inventory_sources[0].inventory ) }}" # REQUIRED
    organization:                         "{{ tower_inventory_sources[0].inventory.organization.name | default( tower_inventory_sources[0].organization | default(omit)) }}"
    source:                               "{{ tower_inventory_sources[0].source }}"  # REQUIRED
    source_path:                          "{{ tower_inventory_sources[0].source_path | default(omit) }}"
    source_script:                        "{{ tower_inventory_sources[0].source_script | default(omit) }}"
    source_vars:                          "{{ tower_inventory_sources[0].source_vars | default(omit) }}"
    credential:                           "{{ tower_inventory_sources[0].credential | default(omit) }}"
    overwrite:                            "{{ tower_inventory_sources[0].overwrite | default(omit) }}"
    overwrite_vars:                       "{{ tower_inventory_sources[0].overwrite_vars | default(omit) }}"
    custom_virtualenv:                    "{{ tower_inventory_sources[0].custom_virtualenv | default(omit) }}"
    timeout:                              "{{ tower_inventory_sources[0].timeout | default(omit) }}"
    verbosity:                            "{{ tower_inventory_sources[0].verbosity | default(omit) }}"
    update_on_launch:                     "{{ tower_inventory_sources[0].update_on_launch | default(omit) }}"
    update_cache_timeout:                 "{{ tower_inventory_sources[0].update_cache_timeout | default(omit) }}"
    source_project:                       "{{ tower_inventory_sources[0].inventory.source_project.name | default( tower_inventory_sources[0].source_project | default(omit)) }}"
    update_on_project_update:             "{{ tower_inventory_sources[0].update_on_project_update | default(omit) }}"
    state:                                "{{ tower_inventory_sources[0].state | default(tower_state | default('present')) }}"
    notification_templates_started:       "{{ tower_inventory_sources[0].notification_templates_started | default(tower_inventory_sources[0].related.notification_templates_started | default([]) | map(attribute='name') | list ) }}"
    notification_templates_success:       "{{ tower_inventory_sources[0].notification_templates_success | default(tower_inventory_sources[0].related.notification_templates_success | default([]) | map(attribute='name') | list ) }}"
    notification_templates_error:         "{{ tower_inventory_sources[0].notification_templates_error | default(tower_inventory_sources[0].related.notification_templates_error | default([]) | map(attribute='name') | list ) }}"
    tower_config_file:                    "{{ tower_config_file | default(omit) }}"
    tower_host:                           "{{ tower_hostname | default(omit) }}"
    tower_username:                       "{{ tower_username | default(omit) }}"
    tower_password:                       "{{ tower_password | default(omit) }}"
    tower_oauthtoken:                     "{{ tower_oauthtoken | default(omit) }}"
    validate_certs:                       "{{ tower_validate_certs | default('false') }}"
  loop: "{{ tower_inventory_sources }}"
  loop_control:
    loop_var: source
  no_log: "{{ tower_configuration_inventory_sources_secure_logging }}"
  when: tower_inventory_sources is defined
...
